api-design
Charles Nykamp and Barry Nwike

Statements:

REQUEST: /gameslist
GET Parameters:
    user (Optional, default:"") --case insensitive, returns games 
        played by usernames containing the input text
    Ex: /gameslist?user=avocado

    turns (Optional, default: infinity, default comparitor: =) -- returns games played with a certain number of turns
        can be modified with + or - to obtain a list of games with turns above (+) or below (-) the specified number
    Ex: /gameslist?turns=+15 *games with more than 15 turns*

    rating_max (Optional, default: 2000) --returns games where the highest rating of a player is below a given value
    Ex: /gameslist?rating_max=1600

    rating_min (Optional, default: 400) --returns games where the highest rating of a player is above a given value
    Ex /gameslist?rating_min=200

    opening_moves (Optional, default: "") --returns a list of games where a given sequence of strings is played out at the beginning
    Ex: /gameslist?opening_moves=d4c6kd7
    
    page_size (Optional, default: "")
    
    page_id (Optional, default: 1)
    
    

RESPONSE: A JSON list of dictionaries, each of which represents the metadata of a particular game. Each dictionary will have
the following fields:

- game_id (TEXT) The id that our database uses to refer to this game
- white_username (TEXT)
- white_rating (INTEGER)
- black_username (TEXT)
- black_rating (INTEGER)
- turns (INTEGER) the number of turns in the game
- victory_status (TEXT) such as draw, outoftime, mate
- winner (TEXT) either the value black or the value white

This list will be sorted by the ranking of the higher player, descending



REQUEST: /game/<game_id>
    Returns a game page with the associated/given id
Ex: /game/sdEksd4

RESPONSE: A JSON dictionary which represents the full data of a game. The dictionary will have
the following fields:

- white_username (TEXT)
- white_rating (INTEGER)
- black_username (TEXT)
- black_rating (INTEGER)
- turns (INTEGER) the number of turns in the game
- victory_status (TEXT) such as draw, outoftime, mate
- winner (TEXT) either the value black or the value white

- rated_status(BOOLEAN) either the game is a rated match or not 
- moves (TEXT) a string sequence of every move made in the game
- opening_name (TEXT) A string that gives the exact chess name of a specific sequence of opening moves
- increment_code (TEXT) what the time rules were when the game was played. Ex: 15+2



